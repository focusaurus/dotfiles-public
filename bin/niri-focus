#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.ml
#
# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
# set -o erreit # always eit on error
# set -o errtrace # trap errors in functions as well
# set -o pipefail # don't ignore eit codes when piping output
# set -u # error on reference to unknown variable
# # set - # enable debugging
#
# IFS=$'\n\t'
# ---- End unofficial bash strict mode boilerplate

find_window() {
  filter="$1"
  id=$(niri msg --json windows |
    jq --raw-output "[.[] | select(${filter})][0] .id // \"\"")
  if [[ -n "${id}" ]]; then
    niri msg action focus-window --id "${id}"
    return 0
  fi
  return 1
}
if [ $# -eq 0 ]; then
  echo "Usage: $0 <app_name>"
  echo "Available apps: gofi"
  exit 1
fi

focus_browser() {
  filter='.app_id == "firefox" and (.title | startswith("main:"))'
  if ! find_window "${filter}"; then
    launch firefox
  fi
  find_window "${filter}"
}

hotkey_alt() {
  wtype -d 10 -M alt -k "$1" -m alt
}

launch() {
  nohup "$@" &>/dev/null &
}

launchx() {
  cd /tmp || exit
  display=$(niri msg -j windows |
    jq --raw-output '[.[] | select(.app_id == "org.freedesktop.Xwayland")] | .[].title' |
    sort |
    tail -1 |
    cut -d : -f 2)
  if [[ -z "${display}" ]]; then
    display=0
  fi
  display=$((display + 1))
  nohup Xwayland -geometry "$(wlr-randr | grep preferred | awk '{print $1}')" ":${display}" &
  DISPLAY=":${display}" nohup "$@" &>/dev/null &
}

APP_NAME="$1"

case "$APP_NAME" in
ario)
  find_window '.app_id == "ario"' || launch ario
  ;;
1password)
  find_window '.app_id == "1Password"' || launch 1password
  ;;
calculator)
  find_window '.app_id == "mate-calc"' || launch mate-calc
  ;;
gofi)
  find_window '.title == "gofi"' || launch ghostty --title="gofi" -e gofi ~/.config/gofi/niri.kdl
  ;;
# crealityprint)
#   find_window '.title == "crealityprint"' || launch /opt/creality-print/CrealityPrint
#   ;;
freecad)
  find_window '.app_id == "org.freecad.FreeCAD"' || launch freecad
  ;;
prusaslicer)
  if pidof prusa-slicer >/dev/null; then
    find_window '.app_id == "org.freedesktop.Xwayland"'
  else
    launchx prusa-slicer
  fi
  ;;
vial)
  find_window '.app_id == "Vial"' || launch Vial
  ;;
vscode)
  find_window '.app_id == "code-oss"' || launch code
  ;;
bambustudio)
  find_window '.app_id == "BambuStudio"' || launchx bambu-studio
  ;;
browser | firefox)
  focus_browser
  ;;
calendar)
  filter='.app_id == "firefox" and (.title | startswith("calendar:"))'
  find_window "${filter}" || focus_browser
  ;;
trello)
  filter='.app_id == "firefox" and (.title | startswith("trello:"))'
  find_window "${filter}" || focus_browser
  ;;
email)
  focus_browser
  hotkey_alt 1
  ;;
ghostty)
  find_window '.app_id == "com.mitchellh.ghostty" title != "gofi"' || launch ghostty
  ;;
terminal | kitty)
  find_window '.app_id == "kitty"' || launch kitty
  ;;
music)
  filter='.app_id == "firefox" and (.title | startswith("music:"))'
  find_window "${filter}" || focus_browser
  ;;
obsidian)
  find_window '.app_id == "obsidian"' || obsidian --enable-features=UseOzonePlatform --ozone-platform=wayland
  ;;
gedit)
  find_window '.app_id == "org.gnome.gedit"' || gedit
  ;;
previous)
  niri msg action focus-window-previous
  ;;
slack)
  find_window '.app_id == "Slack"' || launch slack
  ;;
*)
  echo "Unknown app: $APP_NAME"
  echo "Available apps: gofi"
  exit 1
  ;;
esac
