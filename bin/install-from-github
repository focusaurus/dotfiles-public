#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # don't ignore exit codes when piping output
set -o posix    # more strict failures in subshells
# set -x          # enable debugging

IFS=$'\n\t'
# ---- End unofficial bash strict mode boilerplate

log_repo() {
  log_dir=~/.config/install-from-github
  mkdir -p "${log_dir}"
  echo "$1" >>"${log_dir}/repos.log"
}

install_exe() {
  #from_path="$(find . -type f -executable -print0)"
  from_path="$(file * | grep 'LSB executable' | cut -d : -f 1)"
  if [[ -z "${from_path}" ]]; then
    echo "No exe found!"
    return 1
  fi
  read -r -e -p "exe name: " to_name
  mv "${from_path}" "${to_name}"
  sudo install --mode=755 --target-directory /usr/local/bin "${to_name}"
}

main() {
  repo_any_url="$1"
  if [[ -z "${repo_any_url}" ]]; then
    repo_any_url=$(prompt-or-clipboard.sh "Github Repo URL")
  fi
  local repo_base_url
  repo_base_url=$(echo "${repo_any_url}" | cut -d / -f 1-5)
  log_repo "${repo_base_url}"
  local base_url
  base_url=$(echo "${repo_any_url}" | cut -d / -f 1-3)
  local latest_url="${repo_base_url}/releases/latest"
  local artifact_path
  artifact_path=$(curl --silent --location --fail --show-error "${latest_url}" |
    pup 'a attr{href}' |
    grep -Ei 'linux|deb|tar|gz|bz2' |
    ~/bin/fuzzy-filter)
  if [[ -z "${artifact_path}" ]]; then
    exit
  fi
  local artifact_name
  artifact_name=$(basename "${artifact_path}")
  local project
  project=$(echo "${latest_url}" | cut -d / -f 5)
  local temp
  temp=$(mktemp -d "/tmp/install-${project}-XXX")
  cd "${temp}"
  local artifact_url="${base_url}${artifact_path}"
  echo "Downloading ${artifact_url} to ${PWD}"
  wget --quiet "${artifact_url}"
  case "${artifact_name}" in
  *.deb)
    sudo dpkg -i "${artifact_name}"
    ;;
  *.gz | *.zip)
    ~/bin/extract "${artifact_name}"
    install_exe
    ;;
  *)
    from_name="$(find . -type f -executable -print)"

    if [[ -n "${from_name}" ]]; then
      read -r -e -p "exe name: " to_name
      install_exe "${from_name}" "${to_name}"
      sudo install --mode=755 --target-directory /usr/local/bin "${from_name}" "${to_name}"
    else
      install_exe
      echo "âœ“ installed"
      return
    fi

    echo Unsupported artifact type "${artifact_name}"
    exit 10
    ;;
  esac

}

main "$@"
