#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # don't ignore exit codes when piping output
# set -x          # enable debugging

IFS="$(printf "\n\t")"
# ---- End unofficial bash strict mode boilerplate
~/bin/log "$0" "start"
snippet_dir=~/git.peterlyons.com/dotfiles/snippets

chooser=(rofi -dmenu -p snippet -theme sidebar)
if [[ $(uname) == "Darwin" ]]; then
  # Sigh. Can't control environment PATH in alfred
  chooser=(/usr/local/bin/choose -c highlight=111111)
fi
# show a dmenu of possible snippets, prints the selected snippet abbreviation
abbreviation="${snippet_dir}/"$(
  find "${snippet_dir}" -type f -not -name '*-post.sh' -print0 |
    xargs -0 -n 1 basename |
    sort |
    "${chooser[@]}"
)

~/bin/log "$0" chose "${abbreviation}"
if [[ -x "${abbreviation}" ]]; then
  ~/bin/log "$0" "running as script"
  # run snippet as script
  expansion=$("${abbreviation}")
else
  # Handle snippet from snippet directory
  expansion=$(cat "${abbreviation}")
  line_count=$(echo "${expansion}" | wc -l)
  if [[ "${line_count}" == 1 ]]; then
    # remove trailining newline if it's a 1-liner
    expansion=$(echo "${expansion}" | tr -d '\n')
  fi
fi

if [[ $(uname) == "Darwin" ]]; then
  approach="hammerspoon"
  if [[ "${approach}" == hammerspoon ]]; then
    ~/bin/log "$0" "writing to stdout for hammerspoon to paste"
    # macos via hammerspoon will automatically paste the output
    printf "%s" "${expansion}"
  else
    # cliclick does not seem to work for this via hammerspoon hotkey
    # https://github.com/BlueM/cliclick/issues/38#issuecomment-703943164
    printf "%s" "${expansion}" | ~/bin/copy
    ~/bin/log "$0" "copied. Sleeping."
    sleep 1
    ~/bin/log "$0" "pasting"
    cliclick kd:cmd t:v ku:cmd
    ~/bin/log "$0" "done"
  fi
  exit
fi

# copy the expanded text to the clipboard
echo -n "${expansion}" | ~/bin/copy

#check for terminal or not
pid=$(xdotool getactivewindow getwindowpid)
paste_keysym="v"
# Sometimes need this when doing dvorak via X11
# paste_keysym="period"
if grep -E '(gnome-terminal|termite)' "/proc/${pid}/cmdline" >/dev/null; then
  # paste into the active window via keyboard shortcut
  ~/bin/log "$0" "pasting using terminal keyboard shortcut"
  xdotool key "ctrl+shift+${paste_keysym}"
else
  # paste into the active window via keyboard shortcut
  # WARNING: Due to kmonad handling dvorak at the kernel level,
  # we need to send the qwerty button that will yield the dvorak
  # keysym we want, so here we are sending "period" to get "v" for paste
  ~/bin/log "$0" "pasting using qwerty->dvorak keyboard shortcut"
  xdotool key "ctrl+${paste_keysym}"
  # ~/bin/log "$0" "pasting using qwerty keyboard shortcut"
  # xdotool key "ctrl+v"
fi
post="${abbreviation}-post.sh"
if [[ -x "${post}" ]]; then
  ~/bin/log "$0" "running post script"
  "${post}"
fi
