#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # don't ignore exit codes when piping output
# set -x          # enable debugging

IFS=$'\n\t'
# ---- End unofficial bash strict mode boilerplate

# Default values
account='my.1password.com'
title=''

# Function to show usage
usage() {
  echo "Usage: $0 [OPTIONS]"
  echo "Copy a password from 1Password to clipboard"
  echo ""
  echo "Options:"
  echo "  --account ACCOUNT    1Password account (default: my.1password.com)"
  echo "  --title TITLE        Item title to copy password from (required)"
  echo "  -h, --help          Show this help message"
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    --account)
      account="$2"
      shift 2
      ;;
    --title)
      title="$2"
      shift 2
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    *)
      echo "Unknown option: $1" >&2
      usage
      exit 1
      ;;
  esac
done

# Check if title is provided
if [[ -z "${title}" ]]; then
  echo "Error: --title is required" >&2
  usage
  exit 1
fi
export OP_FORMAT="json"
op signin --account "${account}"
value=$(op --account "${account}" item get "${title}" | jq -r '.fields[] | select(.purpose =="PASSWORD") | .value')
# id=$(op item list --format json | jq -r ".[] | select(.title==\"${title}\") | .id")

# Check if password was found and not empty
if [[ -z "${value}" || "${value}" == "null" ]]; then
  ~/bin/notify "Error: No password field found for '${title}'"
  exit 1
fi

# Copy to clipboard
echo -n "${value}" | ~/bin/copy
~/bin/notify "${title} password copied"
