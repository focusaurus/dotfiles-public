#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # do nott ignore exit codes when piping output
# set -x          # enable debugging

IFS="$(printf "\n\t")"
# ---- End unofficial bash strict mode boilerplate

activate_window() {
  if [[ -z "${current_workspace}" ]]; then
    current_workspace=$(xdotool get_desktop)
  fi
  class="$1"
  shift
  command=$*
  matches=$(wmctrl -lx | grep "${class}" | tac | awk '{print $2 "," $3 "," $1 "," $4}' || true)
  # echo matches "${matches}"
  if [[ -z "${matches}" ]]; then
    # No matching windows, launch the app
    # shellcheck disable=SC2086
    exec ${command}
    return
  fi
  same_desktop=$(echo "${matches}" | grep -E "^${current_workspace}," || true)
  # Find first matching window, but prefer window on current desktop

  id=$(echo "${same_desktop}${matches}" | head -1 | cut -d , -f 3)
  echo "HEY MATCHED ${id}"
  if [[ -n "${id}" ]]; then
    wmctrl -i -a "${id}"
  else
    # shellcheck disable=SC2086
    eval ${command}
  fi
}

awm_by_class() {
  awesome-client "require(\"focus\").by_class(\"$1\")"
}

browser_tab() {
  xdotool key "alt+$1"
}

activate_firefox_main_window() {
  # This is not super robust. It assumes the main firefox general purpose
  # window is the first one launched
  # We filter out the dedicated windows
  id=$(wmctrl -lx |
    grep -i "Navigator.firefox" |
    grep --extended-regexp --invert-match "(YouTube Music| - Calendar)" |
    head -1 |
    awk '{print $1}' ||
    true)
  if [[ -n "${id}" ]]; then
    wmctrl -i -a "${id}"
  else
    exec firefox
  fi
}

activate_chrome_main_window() {
  # This is not super robust.
  # We list all chrome windows and
  # explicitly filter out the special/dedicated purpose ones
  # by partial title match with the goal of identifying the
  # generic main window.
  id=$(wmctrl -lx |
    grep -i "google-chrome.Google-chrome" |
    grep --extended-regexp --invert-match "(music|calendar|workflowy)" |
    head -1 |
    awk '{print $1}' ||
    true)
  if [[ -n "${id}" ]]; then
    wmctrl -i -a "${id}"
  else
    exec google-chrome-stable --restore-last-session
  fi
}

browser() {
  if [[ "$(uname)" == "Darwin" ]]; then
    echo 'require("focus").browser()' | hs >/dev/null
    return
  fi
  # activate_window 'google-chrome.Google-chrome' 'google-chrome-stable'
  # activate_firefox_main_window
  activate_chrome_main_window
}

main() {
  command="$1"
  if [[ $# -lt 1 ]]; then
    # If run with no arguments, we are in symlink mode because
    # blezz is kind of rubbish, so decide what to do based on
    # our symlink's own file base name without the "focus-" prefix
    command=$(basename "$0")
    command="${command#focus-}"
  fi
  case "${command}" in
  firefox)
    activate_firefox_main_window
    ;;
  browser | f1)
    browser
    ;;
  email | gmail | control+f1)
    # activate_window 'pete@' "${HOME}/bin/launch-chrome-app.sh" gmail
    # activate_window 'Peterlyons.com Mail' firefox --new-window "https://mail.google.com/mail/u/0/#search/is%3Astarred+OR+is%3Aunread"
    # activate_firefox_main_window
    browser
    sleep 0.2
    browser_tab 1
    ;;
  editor | code | f2)
    # switch to workspace 2 (text editor)
    # wmctrl -s 1
    activate_window 'Visul Studio Code' 'code'
    ;;
  terminal | kitty | termite | f3)
    # activate_window termite.Termite termite --title termite
    activate_window kitty.kitty kitty --single-instance --title terminal-kitty
    # if wmctrl -lx | grep -qi "termite"; then
    #   if xdotool getactivewindow getwindowname | grep -qi 'termite-mailchimp'; then
    #     # mailchimp is active, switch to local
    #     activate_window termite termite --title termite
    #   else
    #     # termite is open but not active, activate it
    #     activate_window termite-mailchimp true
    #   fi
    # else
    #   activate_window termite termite --title termite
    # fi
    ;;
  cura)
    activate_window 'cura.cura' 'cura'
    ;;
  emacs | orgmode | f4)
    #local app_image
    #app_image="$(find "${HOME}/aur/workflowy" -type f -name 'WorkFlowy-*.AppImage' | sort -n | head -1)"
    # activate_window 'workflowy' "/opt/WorkFlowy-x86_64.AppImage"
    activate_window 'emacs.Emacs' 'emacs'
    ;;
  slack | zoom | slack-or-zoom | f6)
    if wmctrl -l | grep -qi "zoom"; then
      if xdotool getactivewindow getwindowname | grep -qi 'Zoom'; then
        # zoom is active, switch to slack
        activate_window 'slack' 'slack'
      else
        # zoom is open but not active, activate it
        activate_window 'zoom' true
      fi
    else
      activate_window 'slack' 'slack'
    fi
    ;;
  # zoom|shift+f6)
  #   activate_window 'Zoom' true
  #   if wmctrl -l | grep -q "Zoom Meeting ID:"; then
  #     activate_window 'slack' 'slack'
  #   else
  #     activate_window 'Zoom Meeting ID:' 'zoom'
  #   fi
  #   ;;
  zulip | control+f6)
    activate_window 'Zulip' 'zulip'
    # activate_window 'zulip' /usr/bin/flatpak run --branch=stable --arch=x86_64 --command=zulip --file-forwarding org.zulip.Zulip
    ;;
  calendar | gcal | f7)
    activate_window 'calendar' "google-chrome-stable" "https://calendar.google.com/calendar/r"
    # activate_window ' - Calendar' firefox --new-window "https://calendar.google.com/calendar/r"
    # activate_firefox_main_window
    # sleep 0.3
    # browser_tab 2
    ;;
  music | f8)
    activate_window 'music' "google-chrome-stable" --new-window "https://music.youtube.com"
    # activate_firefox_main_window
    # sleep 0.2
    # browser_tab 3
    ;;
  journal-mailchimp | f9)
    ~/git.peterlyons.com/dotfiles/fuzzball/journal-mailchimp
    ;;
  journal-mailchimp-standup | shift+f9)
    ~/git.peterlyons.com/dotfiles/fuzzball/journal-mailchimp-standup
    ;;
  freecad)
    awm_by_class "FreeCAD"
    activate_window FreeCAD freecad
    ;;
  prusa-slicer)
    activate_window PrusaSlicer prusa-slicer
    ;;
  calculator)
    activate_window Calculator mate-calc
    ;;
  workflowy)
    activate_window 'workflowy' "google-chrome-stable" --new-window "https://workflowy.com"
    ;;
  esac
}

main "$@"
