#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # don't ignore exit codes when piping output
# set -x # enable debugging

IFS=$'\n\t'
# ---- End unofficial bash strict mode boilerplate

input="/dev/stdin"
output=$(mktemp /tmp/file-XXX.pdf)
case $# in
0) ;;
1)
  case "$1" in
  *.md)
    input="$1"
    ;;
  *.pdf)
    output="$1"
    ;;
  *)
    echo "Expecting either a markdown file ending in .md or a PDF file ending in .pdf when run with one argument" 1>&2
    return 10
    ;;
  esac
  ;;
2)
  input="$1"
  output="$2"
  ;;
*)
  cat <<EOF
Converts markdown text into a PDF file.

Input and output are determined based on number of command line arguments provided.

With no arguments, markdown will be read from standard input and a PDF file will be generated in /tmp/file-XXX.pdf with a unique temporary filename. The temporary filename will be written to standard output.

With one argument, the file name will be matched based on .md or .pdf extension and treated as input or output accordingly. The input will come from standard input if a .pdf argument is provided, otherwise the .md argument will be processe as input to a temporary output PDF file.

In all cases, the name of the output .pdf file will be written to standard output.
EOF
  return 10
  ;;
esac
~/bin/md-to-html <"${input}" | ~/bin/html-to-pdf >"${output}"
echo "${output}"
