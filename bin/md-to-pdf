#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # don't ignore exit codes when piping output
# set -x # enable debugging

IFS=$'\n\t'
# ---- End unofficial bash strict mode boilerplate

usage() {
  cat <<EOF
Converts markdown text into a PDF file.

Input and output are determined based on number of command line arguments provided.

With no arguments, markdown will be read from standard input and a PDF file will be generated in /tmp/file-XXX.pdf with a unique temporary filename. The temporary filename will be written to standard output.
EOF
  exit 10
}

input="/dev/stdin"
output=$(mktemp /tmp/file-XXX.pdf)
case $# in
1)
  case "$1" in
  *.md)
    input="$1"
    ;;
  *.pdf)
    output="$1"
    ;;
  *)
    echo "Expecting either a markdown file ending in .md or a PDF file ending in .pdf when run with one argument" 1>&2
    exit 10
    ;;
  esac
  ;;
2)
  echo 2 args
  input="$1"
  output="$2"
  ;;
*)
  usage
  ;;
esac
# if [[ -z "$(tty --silent || echo STDIN_IS_A_PIPE)" ]]; then
#   echo pipe
# fi
pandoc --from=markdown --to html --metadata title="${TITLE}" --output="${output}" --quiet "${input}"
echo "${output}"
