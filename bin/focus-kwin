#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # don't ignore exit codes when piping output
set -u          # error on reference to unknown variable
# set -x # enable debugging

IFS=$'\n\t'
# ---- End unofficial bash strict mode boilerplate

# View output with: journalctl --user -f -u plasma-kwin_wayland.service
if [ $# -eq 0 ]; then
  echo "Usage: $0 <name>"
  exit 1
fi

launch() {
  cd /tmp
  nohup "$@" &
}

grepfor="$1"
case "${grepfor}" in
bambustudio)
  pgrep --full bambu-studio >/dev/null || launch bambu-studio
  # ps -ef | grep bambu-studio || launch bambu-studio
  ;;
browser | email | music | calendar | trello)
  pgrep firefox >/dev/null || launch firefox
  ;;
gofi)
  pgrep ghostty >/dev/null || launch ~/bin/gofi-ghostty
  ;;
terminal)
  pgrep ghostty >/dev/null || launch ghostty
  ;;
obsidian*)
  pgrep --full 'electron.*obsidian' >/dev/null || launch obsidian
  # ps -ef | grep 'electron.*obsidian' || launch obsidian
  ;;
*)
  # very standard case. gedit is an example.
  pgrep "$1" || launch "$1"
  ;;
esac
script_file=$(mktemp "/tmp/focus-kwin-XXX.js")
suffix="
main('$1', deps);"
cp ~/bin/kwin/focus.js "${script_file}"
echo "${suffix}" >>"$script_file"

# Load and run the script
script_id=$(qdbus org.kde.KWin /Scripting org.kde.kwin.Scripting.loadScript "$script_file")
if [ $? -eq 0 ]; then
  qdbus org.kde.KWin /Scripting org.kde.kwin.Scripting.start
  qdbus org.kde.KWin /Scripting org.kde.kwin.Scripting.unloadScript "$script_id" 2>/dev/null
fi

rm -f "$script_file"

case "$1" in
email)
  echo sending alt+1
  ydotool key 56:1 2:1 2:0 56:0
  ;;
esac
