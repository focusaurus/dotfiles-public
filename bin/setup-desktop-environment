#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # don't ignore exit codes when piping output
set -o posix    # more strict failures in subshells
# set -x          # enable debugging

IFS=$'\n\t'
# ---- End unofficial bash strict mode boilerplate

kill_ok() {
  killall --user "${USER}" --exact "$1" 2>/dev/null || true
}

send_sigusr1() {
  killall --exact --signal SIGUSR1 "$@" 2>/dev/null
}

have_exe() {
  command -v "$1" >/dev/null
}

main() {

  ~/bin/setup-keyboards

  # screen lock after 60 minutes
  xset s 3600 3600
  # screen standby after 1 hour, suspend 2 hours, off 3 hours
  xset dpms 3600 7200 10800

  # 2018-04-17 plyons natural scrolling everywhere in X11
  if have_exe synclient; then
    synclient VertScrollDelta=-119
    synclient HorizScrollDelta=-119
  fi

  # 2019-09-26 plyons press and release a modifier sends key combos
  # left shift press & release is the same as control+comma
  # left control press & release is the same as control+space
  if have_exe xcape; then
    kill_ok xcape
    # Need Super_R for ergodox but really should remap that to Super_L
    # xcape -t 200 -e "Super_L=Control_L|1;Super_R=Control_L|1;Control_L=Control_L|2;"
    xcape -t 200 -e "Control_L=Control_L|2;"
  fi

  # start xbindkeys daemon which remaps extra mouse buttons
  if ! send_sigusr1 xbindkeys; then
    xbindkeys
  fi

  i3dir="/run/user/${UID}/i3"
  if [[ -d "${i3dir}" ]]; then
    export I3SOCK="${i3dir}/ipc-socket.$(pidof i3)"
  fi

  if have_exe sxhkd; then
    kill_ok sxhkd
    sxhkd -r "/run/user/${UID}/sxhkd.log" &
  fi

  if have_exe polybar; then
    # Terminate already running bar instances
    kill_ok polybar

    # Wait until the processes have been shut down
    while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done
    # Launch Polybar, using default config location ~/.config/polybar/config
    #polybar main &
  fi

  if have_exe copyq; then
    kill_ok copyq
    sleep 0.8
    copyq &>/dev/null &
  fi

  if have_exe light-locker; then
    kill_ok light-locker
    light-locker &
  fi

  if have_exe tilda; then
    kill_ok tilda
    tilda --hidden &>/dev/null &
  fi
  ~/bin/touchscreen disable || true

  pkill --uid "${USER}" --full ergodox-watch || true
  ~/bin/ergodox-watch &>/dev/null &
  # 2018-04-09 plyons https://superuser.com/questions/410657/enabling-sticky-keys-under-xorg-awesome-desktop-manager#414535
  # Turn on stickykeys. don't let two keys pressed at the same time disable it.
  # don't turn on "latch lock", ie pressing a modifier key twice "locks" it on.
  # xkbset accessx sticky -twokey -latchlock feedback -stickybeep
  # don't expire these settings. (run xkbset q exp for details.)
  # xkbset exp 1 -accessx -sticky -twokey -latchlock
}

main "$@"
