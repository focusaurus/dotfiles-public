#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # don't ignore exit codes when piping output
# set -x          # enable debugging

IFS=$'\n\t'
# ---- End unofficial bash strict mode boilerplate

kill_ok() {
  killall --user "${USER}" --exact "$1" 2>/dev/null || true
}

send_sigusr1() {
  killall --exact --signal SIGUSR1 "$@" 2>/dev/null
}

have_exe() {
  command -v "$1" >/dev/null
}

main() {
  ~/bin/log "$0" starting
  ~/bin/log "$0" calling setup keyboards
  ~/bin/setup-keyboards

  ~/bin/log "$0" nm-applet
  # Network Manager
  if have_exe nm-applet; then
    kill_ok nm-applet
    nm-applet &>/dev/null &
  fi

  ~/bin/log "$0" synclient
  # 2018-04-17 plyons natural scrolling everywhere in X11
  if have_exe synclient; then
    synclient VertScrollDelta=-119
    synclient HorizScrollDelta=-119
  fi

  # i3dir="/run/user/${UID}/i3"
  # if [[ -d "${i3dir}" ]]; then
  # export I3SOCK="${i3dir}/ipc-socket.$(pidof i3)"
  # export I3SOCK
  # fi

  ~/bin/log "$0" copyq
  if have_exe copyq; then
    kill_ok copyq
    sleep 0.8
    copyq &>/dev/null &
  fi

  ~/bin/log "$0" lxsession
  # needed for 1password CLI
  if have_exe lxsession; then
    kill_ok lxsession
    sleep 0.8
    lxsession &>/dev/null &
  fi

  ~/bin/log "$0" udiskie
  if have_exe udiskie; then
    kill_ok udiskie
    sleep 0.8
    udiskie &>/dev/null &
  fi

  # ~/bin/log "$0" light-locker
  # if have_exe light-locker; then
  #   kill_ok light-locker
  #   light-locker &
  # fi
  #
  ~/bin/log "$0" tilda
  if have_exe tilda; then
    kill_ok tilda
    tilda --hidden &>/dev/null &
  fi

  ~/bin/log "$0" touchscreen-disable
  ~/bin/touchscreen disable || true

  ~/bin/log "$0" xset
  # screen lock
  hour=3600
  xset s $((hour / 2)) $((hour / 2))
  # screen standby, suspend, power off
  xset dpms $((1 * hour)) $((2 * hour)) $((3 * hour))

  ~/bin/log "$0" microphone-write-status
  echo ~/bin/microphone-write-status | at now +1 minute

  # ~/bin/log "$0" imwheel
  # systemctl --user start imwheel
  if have_exe xss-lock; then
    kill_ok xss-lock
    xss-lock -- ~/bin/lock-screen &
  fi

  if have_exe picom; then
    kill_ok picom
    picom --daemon --write-pid-path "/run/user/$(id -u)/picom.pid"
  fi

  ~/bin/log "$0" trackpoint
  tpid=$(xinput list /g TrackPoint | grep -o id=.. | cut -d = -f 2)

  if [[ -n "${tpid}" ]]; then
    propid=$(xinput list-props "${tpid}" | grep -oP "Accel Speed \(\K[0-9]+")
    # Configure a good acceleration
    # see `xinput list-props 10` for property names
    xinput set-prop "TPPS/2 IBM TrackPoint" "${propid}" 0.9 
  fi

  ~/bin/log "$0" "done"
}

main "$@"
