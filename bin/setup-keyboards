#!/usr/bin/env bash

# Please Use Google Shell Style: https://google.github.io/styleguide/shell.xml

# ---- Start unofficial bash strict mode boilerplate
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit  # always exit on error
set -o errtrace # trap errors in functions as well
set -o pipefail # don't ignore exit codes when piping output
set -o posix    # more strict failures in subshells
# set -x          # enable debugging

IFS=$'\n\t'
# ---- End unofficial bash strict mode boilerplate

kill_ok() {
  killall --user "${USER}" --exact "$1" 2>/dev/null || true
}

send_sigusr1() {
  killall --exact --signal SIGUSR1 "$@" 2>/dev/null
}

have_exe() {
  command -v "$1" >/dev/null
}

main() {

  # clear all options so they don't compound
  setxkbmap -option
  # first set all keyboards to dvorak
  setxkbmap -layout dvorak
  # use software dvorak for laptop keyboard
  # caps lock key is ctrl
  # swap left windows and alt
  # See /usr/share/X11/xkb/rules/base for more available options
  thinkpad_device="$(xinput --list |
    grep keyboard |
    grep "AT Translated" |
    grep --extended-regexp --only-matching 'id=[0-9]+' |
    tr -d -c '[:digit:]')"
  if [[ -n "${thinkpad_device}" ]]; then
    setxkbmap -device "${thinkpad_device}" -option "ctrl:nocaps,altwin:swap_lalt_lwin" -layout dvorak
  fi
  # setxkbmap -option "ctrl:nocaps,altwin:swap_lalt_lwin" dvorak

  # 2020-05-07 plyons press and release a modifier sends key combos
  # left control press & release is the same as Escape (for vim)
  # super press & release is the same as super+space (for fuzzball)
  # left shift press & release is the same as control+comma (for snippets)
  if have_exe xcape; then
    kill_ok xcape
    xcape -t 200 -e "Control_L=Escape;Control_R=Escape;Super_L=Control_L|2;Super_R=Control_R|2;Shift_L=Control_L|comma;Shift_R=Control_R|comma"
  fi

  # 2018-04-10 plyons set fast keyboard repeat
  # syntax is delay (ms) then repeat rate (cps I think)
  delay=300
  rate=70
  xset r rate "${delay}" "${rate}"

  # start xbindkeys daemon which remaps extra mouse buttons
  if ! send_sigusr1 xbindkeys; then
    xbindkeys
  fi

  if have_exe sxhkd; then
    kill_ok sxhkd
    sxhkd -r "/run/user/${UID}/sxhkd.log" &
  fi
}

main "$@"
