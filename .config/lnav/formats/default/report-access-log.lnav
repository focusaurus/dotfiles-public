#
# @synopsis: report-access-log
# @description: Generate a report of the access_log table
# @output-format: text/markdown
#

;DROP TABLE IF EXISTS report_access_log
;CREATE TABLE report_access_log AS
    SELECT
        log_time_msecs,
        log_level,
        c_ip,
        cs_method,
        cs_uri_stem,
        cs_version,
        sc_status,
        sc_bytes,
        CASE cs_referer
          WHEN '-' THEN NULL
          ELSE regexp_match('://([^/]+)', cs_referer)
        END AS cs_referer,
        cs_user_agent
      FROM access_log

# XXX These indexes don't seem to help...
#;CREATE INDEX report_access_log_unique_visitors ON
#    report_access_log(spooky_hash(c_ip, cs_user_agent))
#;CREATE INDEX report_access_log_uri ON
#    report_access_log(cs_uri_stem)
#;CREATE INDEX report_access_log_status ON
#    report_access_log(sc_status)

;SELECT count(*) AS total_requests,
        count(DISTINCT spooky_hash(c_ip, cs_user_agent)) AS unique_visitors,
        count(DISTINCT cs_uri_stem) AS requested_files,
        humanize_file_size(sum(sc_bytes)) AS tx_amount,
        sum(CASE log_level WHEN 'invalid' THEN 1 ELSE 0 END) AS invalid_requests
   FROM report_access_log

;SELECT count(*) AS not_found
   FROM (SELECT 1 FROM report_access_log
           WHERE sc_status = 404
           GROUP BY cs_uri_stem)

:echo ---
title: Access Log Report
targets:
  invalid-requests:
    command: ;SELECT log_line, log_raw_text FROM access_log WHERE log_level = 'invalid'
  unique-visitors:
    command: ;SELECT c_ip, cs_user_agent, count(*) AS hits FROM access_log GROUP BY c_ip, cs_user_agent ORDER BY hits DESC
---

:echo
:echo # access_log report
:echo
:echo ## Dashboard
:echo

* ${total_requests} Total requests
* ${invalid_requests} [Total invalid requests](#/frontmatter/targets/invalid-requests/command)
* ${unique_visitors} [Unique visitors](#/frontmatter/targets/unique-visitors/command)
* ${requested_files} Requested files
* ${not_found} Not found
* ${tx_amount} Tx. amount

:echo
:echo ## Unique visitors per day
:echo

;SELECT
     count(*) AS Hits,
     printf('%.2f%%', 100.0 * count(*) / $total_requests) AS "h%",
     count(DISTINCT spooky_hash(c_ip, cs_user_agent)) AS Vis,
     humanize_file_size(sum(sc_bytes)) AS "Tx. Amount",
     strftime('%F', min(log_time_msecs) / 1000, 'unixepoch') AS Date
   FROM report_access_log
   GROUP BY timeslice(log_time_msecs, '1d')
   ORDER BY Hits DESC
   LIMIT 10
:write-table-to -

:echo
:echo ## Requested files
:echo

;SELECT
     count(*) AS Hits,
     printf('%.2f%%', 100.0 * count(*) / $total_requests) AS "h%",
     count(DISTINCT spooky_hash(c_ip, cs_user_agent)) AS Vis,
     humanize_file_size(sum(sc_bytes)) AS "Tx. Amount",
     cs_method AS Mtd,
     cs_version AS Proto,
     cs_uri_stem AS URIs
   FROM report_access_log
   GROUP BY cs_uri_stem, cs_method
   ORDER BY Hits DESC
   LIMIT 10
:write-table-to -

:echo
:echo ## Not found URLs
:echo

;SELECT
     count(*) AS Hits,
     printf('%.2f%%', 100.0 * count(*) / $total_requests) AS "h%",
     count(DISTINCT spooky_hash(c_ip, cs_user_agent)) AS Vis,
     humanize_file_size(sum(sc_bytes)) AS "Tx. Amount",
     cs_method AS Mtd,
     cs_version AS Proto,
     cs_uri_stem AS URIs
   FROM report_access_log
   WHERE sc_status = 404
   GROUP BY cs_uri_stem, cs_method
   ORDER BY Hits DESC
   LIMIT 10
:write-table-to -

:echo
:echo ## Visitor IPs
:echo

;SELECT
     count(*) AS Hits,
     printf('%.2f%%', 100.0 * count(*) / $total_requests) AS "h%",
     count(DISTINCT spooky_hash(c_ip, cs_user_agent)) AS Vis,
     humanize_file_size(sum(sc_bytes)) AS "Tx. Amount",
     c_ip AS Host
   FROM report_access_log
   GROUP BY c_ip
   ORDER BY Hits DESC
   LIMIT 10
:write-table-to -

:echo
:echo ## Referring Sites
:echo

;SELECT
     count(*) AS Hits,
     printf('%.2f%%', 100.0 * count(*) / $total_requests) AS "h%",
     count(DISTINCT spooky_hash(c_ip, cs_user_agent)) AS Vis,
     humanize_file_size(sum(sc_bytes)) AS "Tx. Amount",
     cs_referer AS Referer
   FROM report_access_log
   WHERE cs_referer IS NOT NULL
   GROUP BY cs_referer
   ORDER BY Hits DESC
   LIMIT 10
:write-table-to -

:echo
:echo ## HTTP Status Codes
:echo

;SELECT
     count(*) AS Hits,
     printf('%.2f%%', 100.0 * count(*) / $total_requests) AS "h%",
     count(DISTINCT spooky_hash(c_ip, cs_user_agent)) AS Vis,
     humanize_file_size(sum(sc_bytes)) AS "Tx. Amount",
     printf('%sXX', sc_status / 100) AS Status
   FROM report_access_log
   GROUP BY sc_status / 100
   ORDER BY Hits DESC
   LIMIT 10
:write-table-to -
