{
	"table-driven test": {
		"prefix": "tdt",
		"description": "map[string]struct{} and testify/assert",
		"scope": "go",
		"body": [
			"func TestSomeFunc(t *testing.T) {",
			"\ttests := map[string]struct {",
			"\t\tinput    interface{}",
			"\t\texpected interface{}",
			"\t}{",
			"\t\t\"testdescription\": {",
			"\t\t\tinput:    42,",
			"\t\t\texpected: 42,",
			"\t\t},",
			"\t}",
			"",
			"\t// To debug a particular test case first, add ! as a prefix to it's description.",
			"\t// It will sort to the beginning and run first",
			"\tkeys := make([]string, 0)",
			"\tfor k := range tests {",
			"\t\tkeys = append(keys, k)",
			"\t}",
			"        slices.Sort(keys)",
			"",
			"\tfor desc := range keys {",
			"                test := tests[desc]",
			"\t\tt.Run(desc, func(t *testing.T) {",
			"\t\t\tactual, err := functionUnderTest(test.input)",
			"\t\t\tassert.NoError(t, err)",
			"\t\t\tassert.EqualValues(t, test.expected, actual)",
			"\t\t})",
			"\t}",
			"}",
			""
		]
	}
}
