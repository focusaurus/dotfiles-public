{
  "iferrreturnerr": {
    "body": [
      "if err != nil {",
      "\\treturn nil, fmt.Errorf(\"${1:message}: %w\", err)",
      "}",
      ""
    ],
    "description": "go error handling boilerplate",
    "prefix": "iferr"
  },
  "tdt": {
    "body": [
		"func Test${1:SomeFunc}(t *testing.T) {",
		"\ttests := map[string]struct {",
		"\t\tinput    interface{}",
		"\t\texpected interface{}",
		"\t}{",
		"\t\t\"base case\": 42,",
		"\t}",
		"\tfor desc, test := range tests {",
		"\t\tt.Run(desc, func(t *testing.T) {",
		"\t\t\t// Use this to isolate a single test case",
		"\t\t\t// by putting an @ in its desc",
		"\t\t\t// if !strings.Contains(desc, \"!\") {",
		"\t\t\t// \treturn",
		"\t\t\t// }",
		"\t\t\tactual := SomeFunc(test.input)",
		"\t\t\tassert.EqualValues(t, test.expected, actual)",
		"\t\t})",
		"\t}",
		"}",
		""
	],
    "description": "table-driven test (generic, gotest.tools/assert)",
    "prefix": "tdt"
  }
}
